from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context

# üëá –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Base –∏ –º–æ–¥–µ–ª–∏, —á—Ç–æ–±—ã Alembic –∑–Ω–∞–ª –æ –Ω–∏—Ö
from app.database import Base
from app.models import rooms  # <-- –û–ë–Ø–ó–ê–¢–ï–õ–ï–ù, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —è–≤–Ω–æ

# –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ Alembic –∏–∑ alembic.ini
config = context.config

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä—ã (–µ—Å–ª–∏ –µ—Å—Ç—å logging.ini)
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# –£–∫–∞–∑—ã–≤–∞–µ–º metadata –ø—Ä–æ–µ–∫—Ç–∞
target_metadata = Base.metadata


def run_migrations_offline() -> None:
    """
    –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ offline-—Ä–µ–∂–∏–º–µ (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ).
    """
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
        compare_type=True,
        compare_server_default=True
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online() -> None:
    """
    –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ online-—Ä–µ–∂–∏–º–µ (—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ).
    """
    connectable = engine_from_config(
        config.get_section(config.config_ini_section, {}),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            compare_type=True,
            compare_server_default=True
        )

        with context.begin_transaction():
            context.run_migrations()


if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
